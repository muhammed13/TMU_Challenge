Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./TMU_Cfg.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./TMU.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

g8_functionHoler    0x8               ./TMU.o
gu8_Active_Channels
                    0x4               ./TMU.o
g8_TCNT0_value_Swpwm_ISR
                    0x1               ./Timer.o
Loop_Counter        0x1               ./TMU.o
gu32_Counter_Delay_Arr
                    0x20              ./TMU.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./DIO.o
LOAD ./TMU.o
LOAD ./TMU_Cfg.o
LOAD ./Timer.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x103c
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DIO.o
 .text          0x00000092        0x0 ./TMU.o
 .text          0x00000092        0x0 ./TMU_Cfg.o
 .text          0x00000092        0x0 ./Timer.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_init
                0x00000092      0x16c ./DIO.o
                0x00000092                DIO_init
 .text.DIO_Write
                0x000001fe      0x13c ./DIO.o
                0x000001fe                DIO_Write
 .text.DIO_Read
                0x0000033a       0xd4 ./DIO.o
                0x0000033a                DIO_Read
 .text.DIO_Toggle
                0x0000040e       0xb6 ./DIO.o
                0x0000040e                DIO_Toggle
 .text.TMU_Init
                0x000004c4       0x9c ./TMU.o
                0x000004c4                TMU_Init
 .text.TMU_Start
                0x00000560      0x180 ./TMU.o
                0x00000560                TMU_Start
 .text.TMU_Dispatch
                0x000006e0      0x1ba ./TMU.o
                0x000006e0                TMU_Dispatch
 .text.TMU_DeInit
                0x0000089a       0x64 ./TMU.o
                0x0000089a                TMU_DeInit
 .text.TMU_Stop
                0x000008fe       0xc8 ./TMU.o
                0x000008fe                TMU_Stop
 .text.Timer_Init
                0x000009c6       0xfe ./Timer.o
                0x000009c6                Timer_Init
 .text.Timer_Start
                0x00000ac4       0xe6 ./Timer.o
                0x00000ac4                Timer_Start
 .text.Timer_Stop
                0x00000baa       0x68 ./Timer.o
                0x00000baa                Timer_Stop
 .text.Timer_GetStatus
                0x00000c12       0xc4 ./Timer.o
                0x00000c12                Timer_GetStatus
 .text.Timer_GetValue
                0x00000cd6       0x92 ./Timer.o
                0x00000cd6                Timer_GetValue
 .text.Timer_Clear
                0x00000d68       0x68 ./Timer.o
                0x00000d68                Timer_Clear
 .text.Timer_DeInit
                0x00000dd0       0xa6 ./Timer.o
                0x00000dd0                Timer_DeInit
 .text.__vector_10
                0x00000e76       0x2a ./Timer.o
                0x00000e76                __vector_10
 .text.func0    0x00000ea0       0x3e ./main.o
                0x00000ea0                func0
 .text.func1    0x00000ede       0x3e ./main.o
                0x00000ede                func1
 .text.func2    0x00000f1c       0x3e ./main.o
                0x00000f1c                func2
 .text.func3    0x00000f5a       0x3e ./main.o
                0x00000f5a                func3
 .text.func4    0x00000f98       0x3e ./main.o
                0x00000f98                func4
 .text.main     0x00000fd6       0x62 ./main.o
                0x00000fd6                main
 .text.libgcc   0x00001038        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001038        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001038        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001038                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001038        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00001038                exit
                0x00001038                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001038        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000103c                _etext = .

.data           0x00800060        0xc load address 0x0000103c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./DIO.o
 .data          0x00800060        0x0 ./TMU.o
 .data          0x00800060        0x0 ./TMU_Cfg.o
 .data          0x00800060        0x0 ./Timer.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.TMU_Configuration
                0x00800060        0xc ./TMU_Cfg.o
                0x00800060                TMU_Configuration
 *(.gnu.linkonce.d*)
                0x0080006c                . = ALIGN (0x2)
                0x0080006c                _edata = .
                0x0080006c                PROVIDE (__data_end, .)

.bss            0x0080006c       0x38
                0x0080006c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x0080006c        0x0 ./DIO.o
 .bss           0x0080006c        0x0 ./TMU.o
 .bss           0x0080006c        0x0 ./TMU_Cfg.o
 .bss           0x0080006c        0x0 ./Timer.o
 .bss           0x0080006c        0x0 ./main.o
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.TMU_Channels
                0x0080006c        0x2 ./TMU.o
 .bss.TMU_Status
                0x0080006e        0x1 ./TMU.o
 .bss.gu8_Timer0CompFlag
                0x0080006f        0x1 ./Timer.o
                0x0080006f                gu8_Timer0CompFlag
 .bss.T0_PrescallerValue
                0x00800070        0x2 ./Timer.o
 .bss.T1_PrescallerValue
                0x00800072        0x2 ./Timer.o
 .bss.T2_PrescallerValue
                0x00800074        0x2 ./Timer.o
 *(COMMON)
 COMMON         0x00800076       0x2d ./TMU.o
                0x00800076                g8_functionHoler
                0x0080007e                gu8_Active_Channels
                0x00800082                Loop_Counter
                0x00800083                gu32_Counter_Delay_Arr
 COMMON         0x008000a3        0x1 ./Timer.o
                0x008000a3                g8_TCNT0_value_Swpwm_ISR
                0x008000a4                PROVIDE (__bss_end, .)
                0x0000103c                __data_load_start = LOADADDR (.data)
                0x00001048                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000a4        0x0
                0x008000a4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000a4                PROVIDE (__noinit_end, .)
                0x008000a4                _end = .
                0x008000a4                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1980
 *(.stab)
 .stab          0x00000000      0x648 ./DIO.o
 .stab          0x00000648      0x648 ./TMU.o
                                0x6f0 (size before relaxing)
 .stab          0x00000c90      0x108 ./TMU_Cfg.o
                                0x1f8 (size before relaxing)
 .stab          0x00000d98      0x840 ./Timer.o
                                0x930 (size before relaxing)
 .stab          0x000015d8      0x3a8 ./main.o
                                0x4bc (size before relaxing)

.stabstr        0x00000000      0xa20
 *(.stabstr)
 .stabstr       0x00000000      0xa20 ./DIO.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TMU_Challenge.elf elf32-avr)
LOAD linker stubs
